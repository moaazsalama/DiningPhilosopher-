/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.dine;

import java.util.ArrayList;
import java.util.Arrays;

/**
 *
 * @author Moaaz Salama
 */
public class GUI extends javax.swing.JFrame {
    Philosopher[] philosophers ;
    /**
     * Creates new form GUI
     * @param philosopher
     */
    public GUI(Philosopher[] philosophers) {
        this.philosophers=philosophers;
        
        initComponents();
        ArrayList<String> names=new ArrayList<>();
        for (Philosopher philosopher1 : this.philosophers) {
             names.add(philosopher1.getName()+"Thinking  "+ philosopher1.thinking+" Eating :"+philosopher1.eating);
        }
          users.setModel(new javax.swing.AbstractListModel<String>() {
   
    public int getSize() { return names.size(); }
    public String getElementAt(int i) { return names.get(i); }
});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        users = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(users);

        jButton1.setText("Start Eating");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 14, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Log.msg("hello");
        
        try {
                 for(int i=0;i<philosophers.length;i++){
			Log.msg("Thread "+ i + " has started");
			Thread t= new Thread( philosophers[i]);
			t.start();
		}
        } catch (Exception e) {
           Log.msg(e.getMessage());
        }
        while (true) {
        users.notifyAll();
         
            ArrayList<String> names=new ArrayList<>();
        for (Philosopher philosopher1 : this.philosophers) {
            names.add(philosopher1.getName()+"Thinking  "+ philosopher1.thinking+" Eating :"+philosopher1.eating);
        }
          users.setModel(new javax.swing.AbstractListModel<String>() {
   
    public int getSize() { return names.size(); }
    public String getElementAt(int i) { return names.get(i); }
   
    
}); Boolean finish=true;
    for (Philosopher philosopher1 : this.philosophers) {
            if(philosopher1.thinking==false)
            {
                finish=false;
            }
        }
    if(finish){
        break;
    }
    
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> users;
    // End of variables declaration//GEN-END:variables
}
